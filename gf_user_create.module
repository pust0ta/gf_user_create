<?php
define('manager_sadovod_rid', 18);
define('klient_sadovod_rid', 19);
define('torgovij_predstavitel_rid', 24);
define('klient_tp_rid', 15);
define('optovik_rid', 7);
define('msk_ofis_rid', 20);
define('manager_rid', 5);
define('interesujushijsya_rid', 4);

/**
 * Implements hook_menu().
 * Создаётся страница, на которой размещается форма.
 */
function gf_user_create_menu() {
  $items['gf-user/create'] = array(
    'title' => t('Create account for new client'),
    'page callback' => 'drupal_get_form',
    'page arguments' => ['user_create_form'],
    'access arguments' => array('gf user create'),
  );

  return $items;
}


/**
 * Форма создания нового клиента.
 */
function user_create_form() {
  $form = array();

  $form['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Name'),
    '#placeholder' => t('Name of the Customer or Company name'),
  );
  $form['phone'] = array(
    '#type' => 'textfield',
    '#title' => t('Phone'),
    '#placeholder' => '9012345678',
    '#required' => TRUE,
  );
  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => t('e-mail'),
    '#placeholder' => 'name@example.com',
  );
  $form['city'] = array(
    '#type' => 'textfield',
    '#title' => t('City'),
  );
  $form['address'] = array(
    '#type' => 'textfield',
    '#title' => t('Address'),
  );
  $form['vat_id'] = array(
    '#type' => 'textfield',
    '#title' => t('VAT ID'),
  );
  $form['cargo_company'] = array(
    '#type' => 'textfield',
    '#title' => t('Cargo company'),
  );
  $form['masq'] = array(
    '#type' => 'checkbox',
    '#title' => t('Masquerade to new user'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Create new account'),
  );

  return $form;
}

/**
 * @param $form
 * @param $form_state
 *
 * Валидация данных, введённых в форму
 */
function user_create_form_validate($form, $form_state) {
  if(empty($form_state['values']['phone'])){
    form_set_error('phone', t('Phone number must be set'));
  } elseif (user_has_role(manager_sadovod_rid) and user_load_by_name(str_replace(array('(',')',' ','-', '+'),'',trim($form_state['values']['phone'])))) {
    form_set_error('phone', t('Phone number is already used'));
  } elseif (user_load_by_name(trim($form_state['values']['name']))) {
    form_set_error('name', t('User is already exist'));
  }
}

/**
 * @param $form
 * @param $form_state
 *
 * @throws \Exception
 *
 * При отправке формы производятся следующие действия:
 * 1. создание нового пользователя с ролью "Оптовый клиент
 * 2. переключение на этого пользователя средствами masquerade
 * 3. переадресация на страницу каталога товаров
 */
function user_create_form_submit($form, $form_state) {
  $phone = trim($form_state['values']['phone']);
  //очистка поля "телефон" от лишних символов, чтобы оно было пригодно для логина
  $phone_plain = str_replace(array('(',')',' ','-', '+'),'',$phone);
  $kompaniya = trim($form_state['values']['name']);
  $city = $form_state['values']['city'];
  $address = $form_state['values']['address'];
  $cargo_company = $form_state['values']['cargo_company'];
  $vat_id = $form_state['values']['vat_id'];
  global $user;
  $manager_user = user_load($user->uid);
  $manager_nid = $manager_user->field_manager["und"][0]["target_id"];
  $torgovij_predstavitel = user_has_role(torgovij_predstavitel_rid);
  $manager_sadovod = user_has_role(manager_sadovod_rid);
  $manager = user_has_role(manager_rid);
  $masq = false;
  if ($manager_sadovod) {
    $masq = $form_state['values']['masq'];
  }


  if(empty($form_state['values']['name'])) {
    $name = $phone;
  } else {
    $name = $form_state['values']['name'];
  }


  if (empty($form_state['values']['email'])) {
    $email = 'customer+' . $form_state['values']['phone'] . '@giorgio-ferretti.it';
  } else {
    $email = $form_state['values']['email'];
  }

  $new_customer = [
    'mail' => $email,
    'language' => 'ru',
    'field_kompaniya' => ['und' => [0 => ['value' => $form_state['values']['name']]]],
    'field_telefon' => ['und' => [0 => ['value' => $phone]]],
    'timezone' => 'Europe/Moscow',
    'field_firstname' => ['und' => [0 => ['value' => $name]]],
    'field_gorod' => ['und' => [0 => ['value'=> $city]]],
    'field_adres' => ['und' => [0 => ['value'=> $address]]],
    'field_tk' => ['und' => [0 => ['value'=> $cargo_company]]],
    'field_macroregion' => ["und" => [0 => ["value" => 'Russia']]],
    'field_country_name' => ["und" => [0 => ["value" => 'RU']]],
    'field_language_pref' => ["und" => [0 => ["value" => 'ru']]],
    'field_manager' => ["und" => [0 => ["target_id" => $manager_nid]]],
    'status' => 1,
    'init' => $email,
  ];


  if ($manager_sadovod) {
    $new_customer['name'] = $phone_plain;
    $new_customer['pass'] = $phone_plain; // note: do not md5 the password
    $new_customer['roles'] = [
      DRUPAL_AUTHENTICATED_RID => 'authenticated user',
      klient_sadovod_rid => 'Wholesale-retail customer',
      ];
  } elseif ($torgovij_predstavitel) {
    $new_customer['name'] = $phone_plain;
    $new_customer['pass'] = $phone_plain; // note: do not md5 the password
    $new_customer['roles'] = [
      DRUPAL_AUTHENTICATED_RID => 'authenticated user',
      klient_tp_rid => 'Отсрочка платежа',
      //optovik_rid => 'Wholesaler',
      interesujushijsya_rid => 'Интресующийся',
      ];
  } elseif ($manager) {
    if ($kompaniya) {
      $name = $kompaniya;
    } else {
      $name = $phone_plain;
    }
    $new_customer['name'] = $name;
    $new_customer['pass'] = $phone_plain; // note: do not md5 the password
    $new_customer['roles'] = [
      DRUPAL_AUTHENTICATED_RID => 'authenticated user',
      optovik_rid => 'Wholesaler',
      msk_ofis_rid => 'Московский офис',
      ];
  }


  // The first parameter is null so a new user is created.
  $new_user = user_save(null, $new_customer);
  $new_user->password = $new_customer['pass'];
  _user_mail_notify('register_admin_created', $new_user);
  if ($masq) {
    masquerade_switch_user($new_user->uid);
    drupal_goto('gf_stock/region_switch/Russia', array('query'=>array('destination'=>'shop')));
  }
}

/**
 * Implements hook_permission().
 */
function gf_user_create_permission() {
  return [
    'gf user create' => [
      'title' => t('Create new customer'),
      'description' => t('Create new wholesaler customer from simple form'),
    ],
  ];
}

